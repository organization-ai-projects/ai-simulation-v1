name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: simulation_ai

    steps:
      # Étape 1 : Récupérer le code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Installer Docker Compose
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y curl lsb-release
          DOCKER_COMPOSE_VERSION="1.29.2"
          curl -L https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Vérifie l'installation

      # Étape 3 : Installer les dépendances backend
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install backend dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r src/backend/requirements-dev.txt

      # Étape 4 : Exécuter les tests backend et frontend avec Docker
      - name: Run backend and frontend tests with Docker Compose
        run: |
          cd src/backend
          docker-compose -f docker/docker-compose.yml run --rm backend pytest src/backend/tests/
          cd ../frontend
          yarn install
          yarn test
