name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
    steps:
      # Étape 1 : Récupérer le code
      - uses: actions/checkout@v3

      # Étape 2 : Construire l'image pour les tests
      - name: Build backend test image
        run: |
          docker build -f src/backend/docker/Dockerfile --target testing -t simulation-backend .

      # Étape 3 : Exécuter les tests
      - name: Run backend tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        run: docker run --rm simulation-backend pytest tests/

      # Étape 4 (optionnel) : Générer un rapport de couverture
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage
          path: src/backend/coverage/

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Récupérer le code
      - uses: actions/checkout@v3

      # Étape 2 : Configurer Node.js
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Étape 3 : Cache des modules Node.js
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: src/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Étape 4 : Installer les dépendances
      - name: Install dependencies
        run: yarn --cwd src/frontend

      # Étape 5 : Exécuter les tests
      - name: Run frontend tests
        run: yarn --cwd src/frontend test

      # Étape 6 : Construire le frontend
      - name: Build frontend
        run: yarn --cwd src/frontend build

      # Étape 7 (optionnel) : Générer un rapport de couverture
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage
          path: src/frontend/coverage/
